name: Build Production Packages

on:
    workflow_dispatch:
    push:
        paths-ignore:
            - '.github/**'
            - '*.yaml'
            - '*.md'
            - 'dd-server/tests/**'
            - 'dd-server/requirements.txt'
        branches:
        - main

env:
    SERVER_CONFIG: "\"\n\n@app.route('/')\ndef home():\n\treturn send_from_directory(app.static_folder, 'index.html')\n\n@app.route('/assets/<path:filename>')\ndef send_assets(filename):\n\treturn send_from_directory(app.static_folder+'/assets', filename)\""

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout main
          uses: actions/checkout@v2

        - name: Setup Node.js
          uses: actions/setup-node@v2
          with:
            node-version: '21.x'

        - name: Cache dependencies
          uses: actions/cache@v2
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
                ${{ runner.os }}-node-
    

        - name: Install dependencies and build dist
          working-directory: ./dd-client
          run: |
            npm ci
            npm run build

        - name: Upload distribution aritfacts (client)
          uses: actions/upload-artifact@v2
          with:
            name: client-dist
            path: ./dd-client/dist
        - name: Upload distribution aritfacts (server)
          uses: actions/upload-artifact@v2
          with:
            name: server-dist
            path: ./dd-server/*.py

        - name: Checkout prod branch
          uses: actions/checkout@v2
          with:
            ref: prod

        - name: Download distribution artifacts (client)
          uses: actions/download-artifact@v2
          with:
            name: client-dist
            path: ./dd-server
        - name: Download distribution artifacts (server)
          uses: actions/download-artifact@v2
          with:
            name: server-dist
            path: ./dd-server

        - name: Commit client and server builds to production branch
          working-directory: .
          env:
            GITHUB_TOKEN: ${{ github.token }}
          run: |
            rm -rf ./dd-server/dist
            mkdir -p ./dd-server/dist/assets

            mv -f ./dd-server/site.webmanifest ./dd-server/dist/assets/
            mv -f ./dd-server/*.png ./dd-server/dist/assets/
            mv -f ./dd-server/favicon.ico ./dd-server/dist/assets/
            
            mv -f ./dd-server/index.html ./dd-server/dist/index.html
            mv -f ./dd-server/assets/*.css ./dd-server/dist/assets/main.css
            mv -f ./dd-server/assets/*.js ./dd-server/dist/assets/main.js
            
            sed -i 's@"/assets/index.*css"@"/assets/main.css"@' ./dd-server/dist/index.html
            integrity=$(cat ./dd-server/dist/assets/main.js | openssl dgst -sha384 -binary | openssl enc -base64 -A)
            echo $integrity
            sed -i "s@/assets/index.*js\"@/assets/main.js\" integrity=\"sha384-$integrity\"@" ./dd-server/dist/index.html

            sed -i 's@dbase@0.0.0.0@' ./dd-server/schema.py
            sed -i "s@__name__@__name__, static_folder='dist'@" ./dd-server/server.py
            sed -i 's@http://localhost:8080@*@' ./dd-server/server.py
            echo ${{ env.SERVER_CONFIG }} >> ./dd-server/server.py

            git config --global user.email "dd-github-action"
            git config --global user.name "github-actions@github.com"
            git add ./dd-server/dist/*
            git add ./dd-server/*.py
            git diff-index --quiet HEAD || git commit -am "Auto compile client and configure server"
            git push origin prod
